#!/usr/bin/env ruby


require 'pathname'

require 'rb-inotify'
require 'resque'

require 'bagger'

def flush_out(msg)
  puts msg
  STDOUT.flush
end


module Bagger
  def self.main
    watch_path = ARGV[0]
    dest_path  = ARGV[1]

    if watch_path.nil? || dest_path.nil?
      puts "usage: bag-ingest LISTEN-PATH DEST-PATH"
    else
      watch(watch_path, dest_path)
    end
  end

  def self.watch(watch_path, dest_path)
    flush_out "Watching #{watch_path}"
    notifier = INotify::Notifier.new
    notifier.watch(watch_path, :recursive, :close_write) do |event|
      file_path = event.absolute_name
      Thread.new do
        flush_out "Enqueuing #{file_path}"
        Resque.enqueue(Bagger::Worker, parse_institution(file_path), file_path, dest_path)
      end
    end
    notifier.run
  end

  def self.parse_institution(pathname)
    Pathname.new(pathname).dirname.basename.to_s
  end
end

Bagger.main

